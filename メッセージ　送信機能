◉送信機能の流れ
プロフィール画面のメッセージを送信ボタンを押す　➡️ メッセージを入力して送信する　➡️ DBに登録される　➡️ 送信完了画面


◉データベース
テーブル名　message_table 
カラム　　send_user_id int型　　　 送信者ID
        receive_user_id int型　　受信者ID
        message varchar型       メッセージ内容
        date_time datetime型    送信日時（データベースに登録した日時）
    
    
 ◉ソースの流れ
 
 （検索結果JSP 未実装 ➡️ ）sample.java　(試し用)　➡️ profile.jsp (更新しました）　➡️ send.java のdoPost
 
  ➡️ profile.jsp ➡️ send.java のdoGet ➡️ sendOk.jsp 
 
 
 
 messageDTO-------------------------------------------------------------------------------------------------------------------------------
 
 
package model;

public class messageDTO {

	private int messageId;//メッセージid
	private int sendUserId;//送信者id
	private int receiveUserId;//受信者id
	private String message;//メッセージ内容
	private String dateTime;//DB登録時の日時

	public messageDTO() {

	}

	/*引数に入れたもの(ログインユーザー）を
	 * DTOのフィールドにセットしてカプセル化するコンストラクター
	 * 　｜・messageDAOにて、getMessageメソッドの戻り値として使用｜　　　　　　｜
	 * 注意：引数に入れる順番を守る
	 */
	public messageDTO(int messageId, int sendUserId,
			          int receiveUserId, String message, String dateTime) {
						this.messageId = messageId;
						this.sendUserId = sendUserId;
						this.receiveUserId = receiveUserId;
						this.message = message;
						this.dateTime = dateTime;
	}

	//ゲッター、セッター
		public int getMessageId() {
			return this.messageId;
		}
		public void setMessageId(int messageId) {
			this.messageId = messageId;
		}

		public int getSendUserId() {
			return this.sendUserId;
		}
		public void setSendUserId(int sendUserId) {
			this.sendUserId = sendUserId;
		}

		public int getReceiveUserId() {
			return this.receiveUserId;
		}
		public void setReceiveUserId(int receiveUserId) {
			this.receiveUserId = receiveUserId;
		}

		public String getMessage() {
			return this.message;
		}
		public void setMessage(String message) {
			this.message = message;
		}

		public String getDateTime() {
			return this.dateTime;
		}
		public void setDateTime(String dateTime) {
			this.dateTime = dateTime;
		}
}
-----------------------------------------------------------------------------------------------------------------------------------------------
messageDAO


    
package model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import util.DBManager;

public class messageDAO {

	/** DBコネクション */
	public Connection con;
	/** DBステートメント */
	PreparedStatement stmt;
	/** 検索結果 */
	ResultSet rs;

	 
		//メッセージ送信時にメッセージ情報をDBに登録する　引数：送信者ID,受信者ID,メッセージ内容
	
		public void setMessage(int sentId, int receiveId, String message) throws SQLException, ClassNotFoundException {

            try {
                con = DBManager.getConnection();

                String sql = "INSERT INTO message_table(send_user_id,receive_user_id,message,date_time)VALUES(?,?,?,now())";

                this.stmt = con.prepareStatement(sql);
                stmt.setInt(1, sentId);
                stmt.setInt(2, receiveId);
                stmt.setString(3, message);

                stmt.executeUpdate();
                con.commit();

            } catch (SQLException e) {
				e.printStackTrace();
			} finally {
				stmt.close();
				con.close();
			}
    }
}
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
サンプルサーブレット


protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		request.setCharacterEncoding("UTF-8");



		 userDTO user;


		try {
			//userDAOインスタンス作成
			userDAO userDao = new userDAO();
			//userIdを引数にユーザー情報を取得、userに格納
			user = userDao.selectById(1);      //本来、引数の1の部分は　検索結果JSPから送られたユーザーIDを入れる

					//リクエストスコープにuser情報を保存
					request.setAttribute("user",user);
					//プロフィール画面に飛ぶ
					request.getRequestDispatcher("profile.jsp").forward(request, response);

					return;

		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
			return;
		}
	}
 
 
 
 
 
 
 
 ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
  profile.jsp
  
  
  
  <%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<title>profile</title>
<!--Made with love by Mutiullah Samim -->

<!--Bootsrap 4 CDN-->
<link rel="stylesheet"
	href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
	integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
	crossorigin="anonymous">

<!--Custom styles-->
<link rel="stylesheet" type="text/css" href="myPage.css">
</head>

<body>
	<div class="container">
		<div class="d-flex justify-content-center h-100">
			<div class="card">
				<div class="card-header">
					<h3>ニックネーム: ${user.name}</h3>
					<div class="outter">
						<img src="${user.picName}" class="image-circle" />
					</div>
					<div class="d-flex justify-content-end social_icon">
						<span><i class="fab fa-facebook-square"></i></span> <span><i
							class="fab fa-google-plus-square"></i></span> <span><i
							class="fab fa-twitter-square"></i></span>
					</div>
				</div>


				<div class="card-body">
					<h4>♪自己紹介♪</h4>

						<div class="input-group form-group">
							<div class="input-group-prepend">
								<span class="input-group-text"><i class="my_prof"></i></span>
							</div>
							${user.free}
						</div>

						<h5>♪基本情報♪</h5>

						<div class="data" style="white-space:pre-wrap;">



年齢 ${user.age}

居住地   ${user.area}

年収   ${user.income}

身長   ${user.height}

体型   ${user.body}

学歴 ${user.school}

職種  ${user.job}

休日   ${user.holiday}

タバコは吸いますか   ${user.cigar}

子供はほしいですか  ${user.child}




<A HREF="serch">戻る</a>
<A HREF="logout">ログアウト</a>
</div>



<form action="send" method="post">
	<input type="hidden" value="${user.userId}" name = "userId">
	<input type="submit" value="メッセージを送る" class="btn">
</form>

</body>

</html>







  ------------------------------------------------------------------------------------------------------------------------------
send.java


  
  package controller;

import java.io.IOException;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import model.messageDAO;
import model.userDAO;
import model.userDTO;


@WebServlet(name="send", urlPatterns={"/send"})
public class send extends HttpServlet {
	private static final long serialVersionUID = 1L;

    public send() {
        super();
    }


	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		request.setCharacterEncoding("UTF-8");

		String sentId = request.getParameter("loginId");//送信者ID

		String receiveId = request.getParameter("userId");  //受信者ID

		String message = request.getParameter("message"); //メッセージ



		 try {
				messageDAO dao = new messageDAO();

				dao. setMessage(Integer.parseInt(sentId), Integer.parseInt(receiveId), message);

				request.getRequestDispatcher("sendOk.jsp").forward(request, response);

			} catch (NumberFormatException | ClassNotFoundException | SQLException e) {
				// TODO 自動生成された catch ブロック
				e.printStackTrace();
			}

	}




	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		request.setCharacterEncoding("UTF-8");

		 String userId = request.getParameter("userId");

		 try {
				userDAO dao = new userDAO();
				userDTO user;
				user = dao.selectById(Integer.parseInt(userId));
				request.setAttribute("user", user);
				request.getRequestDispatcher("send.jsp").forward(request, response);

			} catch (NumberFormatException | ClassNotFoundException | SQLException e) {
				// TODO 自動生成された catch ブロック
				e.printStackTrace();
			}

	}

}




ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
send.jsp


<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<title>send</title>
<!--Made with love by Mutiullah Samim -->

<!--Bootsrap 4 CDN-->
<link rel="stylesheet"
	href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
	integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
	crossorigin="anonymous">

<!--Custom styles-->
<link rel="stylesheet" type="text/css" href="send.css">
<body>

<!DOCTYPE html>
<html>
    <head>
        <title>メッセージ</title>
        <style type="text/css">
            textarea
            {
                width: 100%;
                height: 150px;
                padding: 12px 20px;
                box-sizing: border-box;
                border: 2px solid #ccc;
                border-radius: 4px;
                background-color: #f8f8f8;
                font-size: 16px;
                resize: none;
            }
        </style>
    </head>
    <body>

        <p><img src="${user.picName}"alt="プロファイル" style="float:left" width="30" height="30"> ${user.name}(送信先)</p>
        <hr>

        <form  action="send" method="get">
        	<input type="hidden" value="${loginUser.userId}" name = "loginId">
        	<input type="hidden" value="${user.userId}" name = "userId">
            <textarea name="message" maxlength="500" placeholder="メッセージ内容"></textarea>
            <input type="submit" value="送信" class="btn">

        </form>
</body>
</html>







ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
sendOk.jsp


<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<title>sendOk</title>
<!--Made with love by Mutiullah Samim -->

<!--Bootsrap 4 CDN-->
<link rel="stylesheet"
	href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
	integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
	crossorigin="anonymous">

<!--Custom styles-->
<link rel="stylesheet" type="text/css" href="sendOk.css">
</head>
<body>
<h1>送信しました</h1>
<a href="">検索画面へ</a>
<a href="myPage.jsp">マイページへ</a>
<a href="logout">ログアウト</a>
</body>
</html>
